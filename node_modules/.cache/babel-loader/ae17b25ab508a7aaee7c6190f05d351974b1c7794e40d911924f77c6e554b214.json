{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"panel\"\n};\nvar _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"People you may know \", -1 /* HOISTED */);\nvar _hoisted_3 = {\n  \"class\": \"friends\",\n  ref: \"messageRef\"\n};\nvar _hoisted_4 = {\n  \"class\": \"inner\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.people, function (p) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: _ctx.friend._id,\n      \"class\": \"friend\"\n    }, _toDisplayString(p.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])], 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["_createElementVNode","ref","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$setup","people","p","key","_ctx","friend","_id","name"],"sources":["D:\\NU\\realtime-chat-app-vue3-main\\src\\views\\PeopleView.vue"],"sourcesContent":["<template>\r\n\t<div class=\"panel\">\r\n\t\t<h2>People you may know  </h2>\r\n    \r\n    <div class=\"friends\" ref=\"messageRef\">\r\n         <div class=\"inner\">\r\n          <div v-for=\"p in people\" :key=\"friend._id\" class=\"friend\">\r\n                \r\n                    {{p.name}} \r\n          </div>\r\n         </div>          \r\n    </div>  \r\n  </div>\r\n</template>\r\n<script>\r\nimport {ref} from 'vue';\r\nconst people = ref([]);\r\nexport default {\r\n    setup(){\r\n        return {people};\r\n    },\r\n  mounted(){\r\n    console.log(\"ssssssssssssssssssssss\");\r\n    fetch(\"http://localhost:3000/chat/people\",{\r\n      headers:{\r\n          Authorization:\"Bearer \" + this.state.userToken\r\n        }\r\n    }).then(res=>{\r\n      return res.json()\r\n    }).then(data=>{\r\n        console.log(data)\r\n        people.value = data.people;\r\n    }).catch(err=>{\r\n      console.log(err)\r\n    });\r\n\r\n  },\r\n  \r\n}\r\n\r\n</script>\r\n<style>\r\n</style>"],"mappings":";;;EACM,SAAM;AAAO;8BACjBA,mBAAA,CAA8B,YAA1B,sBAAqB;;EAElB,SAAM,SAAS;EAACC,GAAG,EAAC;;;EACf,SAAM;AAAO;;uBAJ1BC,mBAAA,CAWO,OAXPC,UAWO,GAVNC,UAA8B,EAE5BJ,mBAAA,CAOM,OAPNK,UAOM,GANDL,mBAAA,CAKM,OALNM,UAKM,I,kBAJLJ,mBAAA,CAGMK,SAAA,QAAAC,WAAA,CAHWC,MAAA,CAAAC,MAAM,YAAXC,CAAC;yBAAbT,mBAAA,CAGM;MAHoBU,GAAG,EAAEC,IAAA,CAAAC,MAAM,CAACC,GAAG;MAAE,SAAM;wBAErCJ,CAAC,CAACK,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}