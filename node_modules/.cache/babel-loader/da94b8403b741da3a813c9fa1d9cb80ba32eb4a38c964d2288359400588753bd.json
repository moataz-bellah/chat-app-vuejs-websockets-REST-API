{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"panel\"\n};\nvar _hoisted_2 = {\n  \"class\": \"messages\",\n  ref: \"messageRef\"\n};\nvar _hoisted_3 = {\n  \"class\": \"inner\"\n};\nvar _hoisted_4 = {\n  key: 0,\n  \"class\": \"user-self\"\n};\nvar _hoisted_5 = {\n  key: 1,\n  \"class\": \"user-them\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h3\", null, _toDisplayString(_ctx.$route.params.friendName), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.messages, function (message, index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      \"class\": \"message\"\n    }, [message.sender === $props.userId ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString(_ctx.$route.params.friendName) + \": \", 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \" You: \")), _createTextVNode(\" \" + _toDisplayString(message.text), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])], 512 /* NEED_PATCH */), _createElementVNode(\"form\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $setup.text = $event;\n    })\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.text]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = _withModifiers(function ($event) {\n      return $options.sendMessage($setup.text);\n    }, [\"prevent\"]))\n  }, \"+\")])]);\n}","map":{"version":3,"names":["ref","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","_ctx","$route","params","friendName","_hoisted_2","_hoisted_3","_Fragment","_renderList","$setup","messages","message","index","key","sender","$props","userId","_hoisted_4","_hoisted_5","text","$event","onClick","_cache","_withModifiers","$options","sendMessage"],"sources":["D:\\NU\\COMPUTER SCEINCE\\Web\\realtime-chat-app-vue3-main\\src\\components\\Chat.vue"],"sourcesContent":["<template>\r\n    <div class=\"panel\">\r\n       <h3> {{ $route.params.friendName }} </h3> \r\n        <div class=\"messages\" ref=\"messageRef\">\r\n             <div class=\"inner\">\r\n               <div v-for=\"(message,index) in messages\" :key=\"index\" class=\"message\">\r\n                  <div v-if=\"message.sender === userId\" class=\"user-self\">\r\n                    {{$route.params.friendName}}:\r\n                  </div>\r\n                  <div v-else class=\"user-them\"> \r\n                    You: \r\n                     \r\n                  </div>\r\n                        {{message.text}}\r\n               </div>\r\n             </div>          \r\n        </div>\r\n    <form>\r\n               <input v-model=\"text\">\r\n               <button @click.prevent=\"sendMessage(text)\">+</button>\r\n             </form>  \r\n      </div>\t\r\n    </template>\r\n    <script>\r\n    // import { io } from \"socket.io-client\";\r\n    import {ref,onMounted,nextTick} from 'vue';\r\n    import socket from '../socket';\r\n    const text = ref('');\r\n    const messages = ref([]);\r\n    const messageRef = ref(null);\r\n    \r\n        \r\n    //socket.join('chatroom');\r\n    // socket.on('chatroom',(data)=>{\r\n    //   console.log(\"SUIIIIIIIIIIIIIIIIIIIIIIIII\");\r\n    // })\r\n    // socket.on(\"send-message\", (data) => {\r\n    //     console.log(\"Client Connected !!!! \", data);\r\n    //     messages.value.push(data.message);\r\n    // });\r\n    \r\n    socket.on(\"private message\", ({ message, from }) => {\r\n      console.log(\"MEEESAAGE \",from);\r\n      console.log(\"IDDD \",message);\r\n          messages.value.push({text:message,sender:from});\r\n    });\r\n    export default {\r\n        props:['userId','friendName'],\r\n        \r\n        setup(){\r\n            return {text,messages,messageRef}\r\n        },\r\n      mounted(){\r\n        console.log(\"SOSOSOSOSOSOSOS\");\r\n        console.log(\"SOCKET  \",socket.id);\r\n        console.log(\"USERID \",socket.auth.userId);\r\n        // console.log(\"USERTOKEN  ==>  \",this.state.userToken);\r\n        // console.log(\"RECIEVERID  --> \",this.userId);\r\n    \r\n        fetch(\"http://localhost:3000/chat/messages\",{\r\n            method:\"POST\",\r\n            headers:{\r\n              \"Content-Type\":\"application/json\",\r\n              \"Authorization\":\"Bearer \" + this.state.userToken\r\n            },\r\n            body:JSON.stringify({\r\n              recieverId:this.userId\r\n            })\r\n          }).then(res=>{\r\n            return res.json()\r\n          }).then(response=>{\r\n              console.log(\"RETURNED MESSAGES  ====>  \")\r\n              console.log(response)\r\n              messages.value = response.messages\r\n          }).catch(err=>{\r\n            console.log(err);\r\n          });\r\n    \r\n      },\r\n        methods:{\t\r\n            sendMessage:async function(message){\r\n    //       const URL = \"http://localhost:3000\";\r\n    //       const socket = io(URL, { autoConnect: false });\r\n    //       socket.auth = { userId:this.state.myUserId };\r\n    //       socket.connect();\r\n          \r\n          console.log(\"ffffffffffffffffffffffffffffffffffffffffffffffffffffff\",this.state.myUserId);\r\n                console.log(socket.id);\r\n          socket.emit(\"private message\", {\r\n            message,\r\n          to: this.userId,\r\n          from:this.state.myUserId\r\n        });\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          // fetch(\"http://localhost:3000/chat/send\",{\r\n          //   method:\"POST\",\r\n          //   headers:{\r\n          //     \"Content-Type\":\"application/json\",\r\n          //     Authorization:\"Bearer \" + this.state.userToken\r\n          //   },\r\n          //   body:JSON.stringify({\r\n          //     message:message2,\r\n          //     recieverId:this.userId\r\n          //   })\r\n          // }).then(res=>{\r\n          //   return res.json()\r\n          // }).then(response=>{\r\n          //     console.log(\"SENT MESSAGE ___ \")\r\n          //     console.log(response)\r\n          // }).catch(err=>{\r\n          //   console.log(err);\r\n          // });\r\n          \r\n                messages.value.push({text:message,sender:this.state.myUserId});\r\n                await nextTick();\r\n                messageRef.value.scrollTop = messageRef.value.scrollHeight;\r\n                text.value = ''\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    // TO DO  meesageRef.value.scrollTop = messageRef.value.scrollHeight\r\n    \r\n    </script>\r\n    \r\n    <style>\r\n        .panel{\r\n      display: flex;\r\n      flex-direction: column;\r\n      padding: 20px;\r\n      margin: 0 auto;\r\n      max-width: 300px;\r\n      height: 300px;\r\n      background: rgba(255,255,255,0.7);\r\n      box-shadow: 0 8px 32px 0 rgba(31,38,135,0.37);\r\n      border-radius: 10px;\r\n      border: 1px solid rgba(188,255,255,0.18);\r\n    }\r\n    .messages{\r\n      height: 100%;\r\n      width: 100%;\r\n      overflow-y: scroll;\r\n      border-top-left-radius: 5px;\r\n      border-top-right-radius: 5px;\r\n      background-color: white;\r\n    }\r\n    .inner{\r\n      padding: 10px;\r\n    }\r\n    \r\n    .message{\r\n      text-align: left;\r\n      display: flex;\r\n      margin-bottom: 6px;\r\n    }\r\n    .user-self{\r\n      color: green;\r\n    }\r\n    .user-them{\r\n      color:red;\r\n    }\r\n    form{\r\n      position: relative;\r\n      display: flex;\r\n    }\r\n    input{\r\n      width: 100%;\r\n      border:none;\r\n      height: 20px;\r\n      padding: 8px;\r\n      border-top: 1px solid #999;\r\n      border-radius: 0px;\r\n      outline: none;\r\n    }\r\n    \r\n    </style>"],"mappings":";;EACS,SAAM;AAAO;;EAET,SAAM,UAAU;EAACA,GAAG,EAAC;;;EAChB,SAAM;AAAO;;;EAEyB,SAAM;;;;EAGhC,SAAM;;;uBARhCC,mBAAA,CAoBQ,OApBRC,UAoBQ,GAnBLC,mBAAA,CAAyC,YAAAC,gBAAA,CAAjCC,IAAA,CAAAC,MAAM,CAACC,MAAM,CAACC,UAAU,kBAC/BL,mBAAA,CAaM,OAbNM,UAaM,GAZDN,mBAAA,CAWM,OAXNO,UAWM,I,kBAVJT,mBAAA,CASMU,SAAA,QAAAC,WAAA,CATyBC,MAAA,CAAAC,QAAQ,YAA1BC,OAAO,EAACC,KAAK;yBAA1Bf,mBAAA,CASM;MAToCgB,GAAG,EAAED,KAAK;MAAE,SAAM;QAC9CD,OAAO,CAACG,MAAM,KAAKC,MAAA,CAAAC,MAAM,I,cAApCnB,mBAAA,CAEM,OAFNoB,UAEM,EAAAjB,gBAAA,CADFC,IAAA,CAAAC,MAAM,CAACC,MAAM,CAACC,UAAU,IAAE,IAC9B,oB,cACAP,mBAAA,CAGM,OAHNqB,UAGM,EAHwB,QAG9B,I,iBAAM,GACA,GAAAlB,gBAAA,CAAEW,OAAO,CAACQ,IAAI,iB;4DAIlCpB,mBAAA,CAGgB,e,gBAFLA,mBAAA,CAAsB;;aAANU,MAAA,CAAAU,IAAI,GAAAC,MAAA;IAAA;iDAAJX,MAAA,CAAAU,IAAI,E,GACpBpB,mBAAA,CAAqD;IAA5CsB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,WAAAH,MAAA;MAAA,OAAUI,QAAA,CAAAC,WAAW,CAAChB,MAAA,CAAAU,IAAI;IAAA;KAAG,GAAC,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}