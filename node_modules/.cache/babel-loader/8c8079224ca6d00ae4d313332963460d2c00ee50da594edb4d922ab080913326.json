{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"panel\"\n};\nvar _hoisted_2 = {\n  \"class\": \"messages\",\n  ref: \"messageRef\"\n};\nvar _hoisted_3 = {\n  \"class\": \"inner\"\n};\nvar _hoisted_4 = {\n  key: 0,\n  \"class\": \"user-self\"\n};\nvar _hoisted_5 = {\n  key: 1,\n  \"class\": \"user-them\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h3\", null, _toDisplayString(_ctx.$route.params.friendName), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.messages, function (message, index) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      \"class\": \"message\"\n    }, [message.reciever === $props.userId ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \" You: \")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _toDisplayString(_ctx.$route.params.friendName) + \": \", 1 /* TEXT */)), _createTextVNode(\" \" + _toDisplayString(message), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])], 512 /* NEED_PATCH */), _createElementVNode(\"form\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $setup.text = $event;\n    })\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.text]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = _withModifiers(function ($event) {\n      return $options.sendMessage($setup.text);\n    }, [\"prevent\"]))\n  }, \"+\")])]);\n}","map":{"version":3,"names":["ref","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","_ctx","$route","params","friendName","_hoisted_2","_hoisted_3","_Fragment","_renderList","$setup","messages","message","index","key","reciever","$props","userId","_hoisted_4","_hoisted_5","text","$event","onClick","_cache","_withModifiers","$options","sendMessage"],"sources":["D:\\NU\\COMPUTER SCEINCE\\Web\\realtime-chat-app-vue3-main\\src\\views\\ChatView.vue"],"sourcesContent":["<template>\n<div class=\"panel\">\n   <h3> {{ $route.params.friendName }} </h3> \n    <div class=\"messages\" ref=\"messageRef\">\n         <div class=\"inner\">\n           <div v-for=\"(message,index) in messages\" :key=\"index\" class=\"message\">\n              <div v-if=\"message.reciever === userId\" class=\"user-self\">\n                    You: \n              </div>\n              <div v-else class=\"user-them\"> \n                {{$route.params.friendName}}:\n              </div>\n                \t{{message}} \n           </div>\n         </div>          \n    </div>\n<form>\n           <input v-model=\"text\">\n           <button @click.prevent=\"sendMessage(text)\">+</button>\n         </form>  \n  </div>\t\n</template>\n<script>\nimport { io } from \"socket.io-client\";\nimport {ref,onMounted,nextTick} from 'vue';\nconst text = ref('');\nconst messages = ref([]);\nconst messageRef = ref(null);\nconst socket = io(\"http://localhost:3000\",{ autoConnect: false });\n    \n//socket.join('chatroom');\n// socket.on('chatroom',(data)=>{\n//   console.log(\"SUIIIIIIIIIIIIIIIIIIIIIIIII\");\n// })\n// socket.on(\"send-message\", (data) => {\n//     console.log(\"Client Connected !!!! \", data);\n//     messages.value.push(data.message);\n// });\n\nsocket.on(\"private message\", ({ message, from }) => {\n  console.log(\"MEEESAAGE \",socket.id);\n    if(from === socket.id){\n      console.log(\"MEEESAAGE \",message)\n      messages.value.push(message);\n\n    }\n});\nexport default {\n\tprops:['userId','friendName'],\n\t\n\tsetup(){\n\t\treturn {text,messages,messageRef}\n\t},\n  mounted(){\n    // console.log(\"USERTOKEN  ==>  \",this.state.userToken);\n    // console.log(\"RECIEVERID  --> \",this.userId);\n\n    // fetch(\"http://localhost:3000/chat/messages\",{\n    //     method:\"POST\",\n    //     headers:{\n    //       \"Content-Type\":\"application/json\",\n    //       \"Authorization\":\"Bearer \" + this.state.userToken\n    //     },\n    //     body:JSON.stringify({\n    //       recieverId:this.userId\n    //     })\n    //   }).then(res=>{\n    //     return res.json()\n    //   }).then(response=>{\n    //       console.log(\"RETURNED MESSAGES  ====>  \")\n    //       console.log(response)\n    //       messages.value = response.messages\n    //   }).catch(err=>{\n    //     console.log(err);\n    //   });\n\n  },\n\tmethods:{\t\n\t\tsendMessage:async function(message){\n      \n      socket.auth = { userId:this.state.myUserId };\n      console.log(\"ffffffffffffffffffffffffffffffffffffffffffffffffffffff\",this.state.myUserId);\n\t\t\tconsole.log(socket.id);\n      socket.emit(\"private message\", {\n        message,\n      to: this.userId,\n      from:socket.id\n    });\n      // fetch(\"http://localhost:3000/chat/send\",{\n      //   method:\"POST\",\n      //   headers:{\n      //     \"Content-Type\":\"application/json\",\n      //     Authorization:\"Bearer \" + this.state.userToken\n      //   },\n      //   body:JSON.stringify({\n      //     message:message2,\n      //     recieverId:this.userId\n      //   })\n      // }).then(res=>{\n      //   return res.json()\n      // }).then(response=>{\n      //     console.log(\"SENT MESSAGE ___ \")\n      //     console.log(response)\n      // }).catch(err=>{\n      //   console.log(err);\n      // });\n      \n\t\t\tmessages.value.push(message);\n\t\t\tawait nextTick();\n\t\t\tmessageRef.value.scrollTop = messageRef.value.scrollHeight;\n\t\t\ttext.value = ''\n\t\t}\n\t}\n}\n\n\n// TO DO  meesageRef.value.scrollTop = messageRef.value.scrollHeight\n\n</script>\n\n<style>\n\t.panel{\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  margin: 0 auto;\n  max-width: 300px;\n  height: 300px;\n  background: rgba(255,255,255,0.7);\n  box-shadow: 0 8px 32px 0 rgba(31,38,135,0.37);\n  border-radius: 10px;\n  border: 1px solid rgba(188,255,255,0.18);\n}\n.messages{\n  height: 100%;\n  width: 100%;\n  overflow-y: scroll;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n  background-color: white;\n}\n.inner{\n  padding: 10px;\n}\n\n.message{\n  text-align: left;\n  display: flex;\n  margin-bottom: 6px;\n}\n.user-self{\n  color: green;\n}\n.user-them{\n  color:red;\n}\nform{\n  position: relative;\n  display: flex;\n}\ninput{\n  width: 100%;\n  border:none;\n  height: 20px;\n  padding: 8px;\n  border-top: 1px solid #999;\n  border-radius: 0px;\n  outline: none;\n}\nbutton{\n  border:none;\n  outline:none;\n  background:none;\n  position: absolute;\n  right: 3px;\n  top: 4px;\n  font-size: 24px;\n}\n</style>"],"mappings":";;EACK,SAAM;AAAO;;EAET,SAAM,UAAU;EAACA,GAAG,EAAC;;;EAChB,SAAM;AAAO;;;EAE2B,SAAM;;;;EAGlC,SAAM;;;uBARhCC,mBAAA,CAmBQ,OAnBRC,UAmBQ,GAlBLC,mBAAA,CAAyC,YAAAC,gBAAA,CAAjCC,IAAA,CAAAC,MAAM,CAACC,MAAM,CAACC,UAAU,kBAC/BL,mBAAA,CAYM,OAZNM,UAYM,GAXDN,mBAAA,CAUM,OAVNO,UAUM,I,kBATJT,mBAAA,CAQMU,SAAA,QAAAC,WAAA,CARyBC,MAAA,CAAAC,QAAQ,YAA1BC,OAAO,EAACC,KAAK;yBAA1Bf,mBAAA,CAQM;MARoCgB,GAAG,EAAED,KAAK;MAAE,SAAM;QAC9CD,OAAO,CAACG,QAAQ,KAAKC,MAAA,CAAAC,MAAM,I,cAAtCnB,mBAAA,CAEM,OAFNoB,UAEM,EAFoD,QAE1D,M,cACApB,mBAAA,CAEM,OAFNqB,UAEM,EAAAlB,gBAAA,CADFC,IAAA,CAAAC,MAAM,CAACC,MAAM,CAACC,UAAU,IAAE,IAC9B,kB,iBAAM,GACH,GAAAJ,gBAAA,CAAEW,OAAO,iB;4DAI1BZ,mBAAA,CAGgB,e,gBAFLA,mBAAA,CAAsB;;aAANU,MAAA,CAAAU,IAAI,GAAAC,MAAA;IAAA;iDAAJX,MAAA,CAAAU,IAAI,E,GACpBpB,mBAAA,CAAqD;IAA5CsB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,WAAAH,MAAA;MAAA,OAAUI,QAAA,CAAAC,WAAW,CAAChB,MAAA,CAAAU,IAAI;IAAA;KAAG,GAAC,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}